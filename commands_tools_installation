#!/usr/bin/bash

### HOW TO LAUNCH THE SCRIPT
### Please launch it with the following command : "source ./<name_you_gave_to_the_file>"
### https://stackoverflow.com/questions/2197461/how-to-set-an-alias-inside-a-bash-shell-script-so-that-is-it-visible-from-the-ou


cd /etc

yes | sudo apt-get update

# GNU RADIO
yes | sudo apt install gnuradio

# GQRX
yes | sudo apt install gqrx-sdr

# Inspectrum
yes | sudo apt install inspectrum

# Universal Radio Hacker (URH)
yes | sudo apt update
yes | sudo apt install snapd
yes | sudo snap install urh

# GPS-SDR-SIM --> It might be necessary to go into /etc/gps-sdr-sim-1.0 or directly on github to have some interesting files
sudo wget https://github.com/osqzss/gps-sdr-sim/archive/refs/tags/v1.0.tar.gz
sudo tar zxvf v1.0.tar.gz
sudo rm v1.0.tar.gz
cd gps-sdr-sim-1.0
sudo make
sudo cp /etc/gps-sdr-sim-1.0/gps-sdr-sim /usr/local/bin
cd /etc


# Can-utils
yes | sudo apt install can-utils

# LOIC
##MonoDevelop
yes | sudo apt install apt-transport-https dirmngr
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
echo "deb https://download.mono-project.com/repo/ubuntu vs-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-vs.list
yes | sudo apt update
yes | sudo apt-get install monodevelop

##Installation
sudo wget https://raw.githubusercontent.com/NewEraCracker/LOIC/master/loic.sh
yes | sudo bash ./loic.sh install
sudo rm loic.sh #don't need this file anymore, it is already in the folder created after the previous command
echo "alias loic-tool='cd /etc/LOIC && sudo bash ./loic.sh run && exit'" >> ~/.bashrc
source ~/.bashrc

####NOTE : All of this can also be done with : loic-net4.5.sh

# Bluetoothctl
## already installed

# Rfcomm 
## already installed

# Wepattack
##Zlib
yes | sudo apt install zlib1g
yes | sudo apt install zlib1g-dev

##LibPcap
yes | sudo apt-get update
yes | sudo apt-get install libpcap-dev

##libCrypto
yes | sudo apt-get install libssl-dev

##Kismet already here

##Installation
sudo wget https://downloads.sourceforge.net/project/wepattack/WepAttack/0.1.3/WepAttack-0.1.3.tar.gz
sudo tar xvfz WepAttack-0.1.3.tar.gz
sudo rm WepAttack-0.1.3.tar.gz
cd WepAttack-0.1.3/src
sudo chmod +x wlan
sudo sed -i 's/log.o\\/log.o \\/g' Makefile #If we don't do that, there will be an error on line 24 of the Makefile because log.o and modes.o will form only one argument instead of two
sudo make
sudo make install
cd /etc

# Bluesnarfer
sudo apt-get install bluetooth libbluetooth-dev -y
sudo git clone https://github.com/boos/bluesnarfer
cd bluesnarfer
sudo make
echo "alias bluesnarfer='sudo /etc/bluesnarfer/bluesnarfer'" >> ~/.bashrc
source ~/.bashrc
cd /etc

# Carwhisperer
yes | sudo apt install libbluetooth-dev bluez bluetooth
sudo wget http://trifinite.org/Downloads/carwhisperer-0.2.tar.gz
sudo tar zxvf carwhisperer-0.2.tar.gz
sudo rm carwhisperer-0.2.tar.gz
cd carwhisperer-0.2
sudo make
sudo mv hcid.conf main.conf #Rename a file
sudo sed -i 's/hcid/main/g' Makefile #Replace some text
sudo sed -i 's/cw_pin.sh/cw_pin.pl/g' Makefile #Replace some text
sudo make install
cd /etc

# Bettercap
##build-essential
sudo apt update -y
yes | sudo apt install build-essential

##libpcap-dev
sudo apt-get update -y
yes | sudo apt-get install -y libpcap-dev

##libusb-1.0-0-dev
sudo apt-get update -y
yes | sudo apt-get install libusb-1.0-0-dev

##libnetfilter-queue-dev
sudo apt-get update -y
yes | sudo apt-get install libnetfilter-queue-dev

##Go
cd /usr/local
sudo wget https://go.dev/dl/go1.17.4.linux-amd64.tar.gz
sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.17.4.linux-amd64.tar.gz
export PATH=$PATH:/usr/local/go/bin
source $HOME/.profile
sudo rm go1.17.4.linux-amd64.tar.gz
export GOPATH=$HOME/go
export PATH=$PATH:/$GOPATH/bin

##Installation
go get github.com/bettercap/bettercap
sudo cp $HOME/go/bin/bettercap /usr/local/bin
cd /etc

# Crackle
sudo wget http://lacklustre.net/projects/crackle/crackle-0.1.tgz
sudo tar zxvf crackle-0.1.tgz
sudo rm crackle-0.1.tgz
cd crackle-0.1/
sudo make
sudo make install
cd /etc

# Reaver
yes | sudo apt install reaver

# Hashcat
##already installed

# Linsiid
yes | sudo apt install linssid

# Binwalk
##already installed

# Unsquashfs
##already installed

# Ettercap
##already installed

# Kayak
cd /etc
yes | sudo apt install git
sudo git clone git://github.com/dschanoeh/Kayak
cd /etc/Kayak
yes | sudo apt install maven
sudo mvn clean package
cd /etc/Kayak/application/target/kayak/bin
echo "alias kayak='sudo bash /etc/Kayak/application/target/kayak/bin/kayak'" >> ~/.bashrc
source ~/.bashrc
cd /etc

# SavvyCan
cd /etc
sudo mkdir SavvyCan
cd SavvyCan
sudo wget https://github.com/collin80/SavvyCAN/releases/download/1.0.244/SavvyCAN-11e3b3e-x86_64.AppImage
sudo chmod +x SavvyCAN-11e3b3e-x86_64.AppImage
echo "alias savvycan='sudo /etc/SavvyCan/SavvyCAN-11e3b3e-x86_64.AppImage'" >> ~/.bashrc
source ~/.bashrc
cd /etc

# Aircrack-ng
##already installed

# Wifite
##already installed

# Wifiphisher
cd /etc
yes | sudo apt install git
sudo git clone https://github.com/wifiphisher/wifiphisher.git # Download the latest revision
cd wifiphisher # Switch to tool's directory
sudo pip3 install -U pip setuptools
yes | sudo apt-get install libnl-3-dev libnl-genl-3-dev
yes | sudo apt-get install libssl-dev
yes | sudo python3 setup.py install # Install any dependencies 

# Bluescan
cd /etc
yes | sudo apt install python3-pip libcairo2-dev # To solve the installation error "Failed to build pycairo"
yes | sudo apt install python3-pip python3-dev            # To solve the installation error "Python.h: No such file or directory"
yes | sudo apt install python3-pip libgirepository1.0-dev # To solve the installation error "Failed building wheel for PyGObject"
yes | sudo apt install python3-pip libbluetooth-dev       # To solve the installation error "bluetooth/bluetooth.h: No such file or directory"
yes | sudo apt install python3-pip bluez-tools

yes | sudo apt install libglib2.0-dev libdbus-1-dev gir1.2-gtk-3.0 python3-dbus python3-gi python3-gi-cairo
yes | sudo apt install python3.9 python3.9-dev

##To solve the runtime error "No module named '_dbus_bindings'"
cd /usr/lib/python3/dist-packages
sudo cp _dbus_bindings.cpython-38-x86_64-linux-gnu.so _dbus_bindings.cpython-39-x86_64-linux-gnu.so
sudo cp _dbus_glib_bindings.cpython-38-x86_64-linux-gnu.so _dbus_glib_bindings.cpython-39-x86_64-linux-gnu.so
cd /etc

##Installation
yes | sudo apt-get install python3-distutils
yes | sudo apt-get install --reinstall python3-apt
yes | sudo python3.9 -m pip install bluescan

# Bluez
cd /etc
yes | sudo apt install bluez

# Btlejack
cd /etc
yes | sudo apt-get install python3-pip
yes | sudo pip3 install btlejack
## Warning : the tool need 3 BBC Micro:Bit components plugged in USB in order to correctly work

# Airgeddon
##Essential tools
##iw -> already installed
##airmon-ng -> already installed
##aircrack-ng -> already installed
##ip -> already installed
##ps -> already installed

##Installation
sudo wget https://github.com/v1s1t0r1sh3r3/airgeddon/archive/master.zip
sudo unzip master.zip
sudo rm master.zip
echo "alias airgeddon='sudo bash /etc/airgeddon-master/airgeddon.sh'" >> ~/.bashrc
source ~/.bashrc

# BTScanner
yes | sudo apt-get update
yes | sudo apt-get install btscanner

# Metasploit
##already installed

# Nmap
##already installed

# Scapy
##already installed

# OPENVAS
yes | sudo apt-get update
yes | sudo apt-get install cmake 
yes | sudo apt-get install doxygen 
yes | sudo apt-get install xmltoman 

sudo wget "https://github.com/cgreen-devs/cgreen/archive/refs/tags/1.4.1.zip"
sudo unzip 1.4.1.zip
sudo rm 1.4.1.zip
cd cgreen-1.4.1
sudo mkdir build
cd build
sudo cmake ..
sudo make install
cd ../..


yes | sudo apt-get install gcc pkg-config libssh-gcrypt-dev libgnutls28-dev \
libglib2.0-dev libpcap-dev libgpgme-dev bison libksba-dev libsnmp-dev \
libgcrypt20-dev redis-server 

yes | sudo apt-get install gcc cmake pkg-config gcc-mingw-w64 libgnutls28-dev \
                perl-base heimdal-dev libpopt-dev libglib2.0-dev \
                libunistring-dev 

yes | sudo apt-get install cmake pkg-config libglib2.0-dev libgpgme-dev \
libgnutls28-dev uuid-dev libssh-gcrypt-dev libhiredis-dev libxml2-dev libpcap-dev 

yes | sudo apt-get install libldap2-dev libradcli-dev 

##Install openvas-smb
sudo wget "https://github.com/greenbone/openvas-smb/archive/refs/heads/main.zip"
sudo unzip main.zip
sudo rm main.zip
cd openvas-smb-main
sudo mkdir build && cd build
sudo cmake ..
sudo make install
cd ../..

##Install gvm-libs
sudo wget "https://github.com/greenbone/gvm-libs/archive/refs/tags/v20.8.4.zip"
sudo unzip v20.8.4.zip
sudo rm v20.8.4.zip
cd gvm-libs-20.8.4
sudo mkdir build && cd build
sudo cmake ..
sudo make install
cd ../..

##Install openvas
sudo wget "https://github.com/greenbone/openvas-scanner/archive/refs/tags/v20.8.4.zip"
sudo unzip v20.8.4.zip
sudo rm v20.8.4.zip
cd openvas-scanner-20.8.4
sudo mkdir build && cd build
sudo cmake ..
sudo make install
cd ../..

##Setting up openvas
sudo greenbone-nvt-sync
cd /openvas-scanner-20.8.4/config
sudo cp redis-openvas.conf /etc/redis/
sudo chown redis:redis /etc/redis/redis-openvas.conf
sudo systemctl start redis-server@openvas.service
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/
sudo ldconfig
sudo openvas -u
cd /etc

# Gimp
##already installed

# ZEEK
sudo apt-get update -y
sudo apt-get install curl gnupg2 wget -y

echo 'deb http://download.opensuse.org/repositories/security:/zeek/xUbuntu_20.04/ /' | sudo tee /etc/apt/sources.list.d/security:zeek.list
curl -fsSL https://download.opensuse.org/repositories/security:zeek/xUbuntu_20.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/security_zeek.gpg > /dev/null

yes | sudo apt update
yes | sudo apt install zeek

#We are prompt a package configuration 
#First we get a screen that explein to us each mail configuration that are possible to choose, then click enter (to click on OK)
#Select the general type of mail configuration with the arrow of your computer, then press enter to validate the choice (We selected Local Only)
#We get to change the value of the domain name use to qualify all mail adresses without a domain name, here we erase the choice with the erase key, 
#then enter "localhost" with the keyboard, then select Ok with the arrow key, then press enter
#Finally, the installation continue

#We need to add Zeek to the system path.
echo "export PATH=$PATH:/opt/zeek/bin" >> ~/.bashrc
source ~/.bashrc

### NOTE -->
#Here the installation is done, but here are some tips to configure zeek :
#https://kifarunix.com/install-zeek-on-ubuntu/
#https://www.atlantic.net/dedicated-server-hosting/how-to-install-zeek-network-security-monitoring-tool-in-ubuntu-20-04/

# Umap2
sudo apt install pip
sudo pip install git+https://github.com/nccgroup/umap2.git

# Wireshark
##already installed

# NESSUS
#Go to : https://www.tenable.com/products/nessus/nessus-essentials 
#Register an account
#Copy the activation code you received by email somewhere

#Then go here : https://www.tenable.com/downloads/nessus?loginAttempted=true
#Download : Nessus-#.##.#-ubuntu1110_amd64.deb file
#Accept the license agreement, and save the file to your download

#sudo dpkg -i package_file.deb
#Remember to replace package_file.deb with the file name you downloaded

#We will now start the Nessus Service with the command:
#sudo /bin/systemctl start nessusd.service

#Open up Firefox and goto the following URL:
#https://localhost:8834/ 
#You may be prompted with a security risk alert.
#Click Advanced... -> Accept the Risk and Continue

#Next, we will set up the scanner.
#Select the option Nessus Essentials

#Clicking the Skip button will bring us to a page, which we will input that code we got in the email from Nessus. 
#Click Continue

#Fill out the Username and Password fields. Make sure to use a strong password! Click submit

#Nessus will now install the plugins required for it to function

#Log in with the account credentials you made earlier. 

#You have now successfully installed Nessus!

# Snort
sudo apt install snort
#To install it, manual steps are required (selection of the interface and the address range)

# Sleuth kit --> test : "mmls -V"
sudo wget https://github.com/sleuthkit/sleuthkit/releases/download/sleuthkit-4.11.1/sleuthkit-4.11.1.tar.gz
sudo tar zxvf sleuthkit-4.11.1.tar.gz
sudo rm sleuthkit-4.11.1.tar.gz
cd sleuthkit-4.11.1/
sudo ./configure
sudo make
sudo make install
cd /etc

# Splunk
#Download splunk on https://www.splunk.com/
#To do so, a splunk account is required.
#It works for every OS existing. 

# Autopsy
sudo apt-get install -y autopsy

# Network Miner
yes | sudo apt install mono-devel
wget https://www.netresec.com/?download=NetworkMiner -O /tmp/nm.zip
sudo unzip /tmp/nm.zip -d /opt/
cd /opt/NetworkMiner*
sudo chmod +x NetworkMiner.exe
sudo chmod -R go+w AssembledFiles/
sudo chmod -R go+w Captures/
echo "alias network-miner='mono /opt/NetworkMiner_2-7-2/NetworkMiner.exe --noupdatecheck'" >> ~/.bashrc
source ~/.bashrc
cd /etc

# Xplico --> DOES NOT WORK FOR NOW
sudo wget https://sourceforge.net/projects/xplico/files/Xplico%20versions/1.2.2/xplico_1.2.2_amd64.deb
sudo dpkg -i xplico_1.2.2_amd64.deb
yes | sudo apt-get -f install
sudo apt-get clean && sudo apt-get update
yes | sudo apt-get upgrade
#### PROBLEMS

# Dshell
sudo apt update -y
sudo apt install -y git
sudo apt install -y python3-pip
git clone https://github.com/USArmyResearchLab/Dshell.git
#dependencies required 
#geoip2
pip install geoip2
#pypacker
pip install pypacker
#pyopenssl
pip install pyopenssl
#pcapy
sudo apt-get install python3-pcapy
#Installation
sudo python3 -m pip install Dshell/

# Kismet
##already installed

# Radar2
##already installed

# Ghidra
sudo apt-get install -y default-jdk
sudo wget https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_10.0.4_build/ghidra_10.0.4_PUBLIC_20210928.zip
sudo unzip ghidra_10.0.4_PUBLIC_20210928.zip
sudo rm ghidra_10.0.4_PUBLIC_20210928.zip
echo "alias ghidra='sudo bash /etc/ghidra_10.0.4_PUBLIC/ghidraRun'" >> ~/.bashrc
source ~/.bashrc

# ICSimulator
cd /etc
sudo apt-get install can-utils -y
sudo apt install git
git clone https://github.com/zombieCraig/ICSim
cd ICSim/
sudo ./setup_vcan.sh
make
cd /etc

exit
